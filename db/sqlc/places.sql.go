// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: places.sql

package db

import (
	"context"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPlace = `-- name: CreatePlace :one
INSERT INTO places (
    name,
    description,
    opening_hours,
    closing_hours,
    rating,
    ticket_category,
    ticket_price,
    location_id,
    place_type_id,
    created_at,
    updated_at,
    cover_image_url,
    profile_image_url,
    resturant_branch_id,
    preference_match
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    $11,
    $12,
    $13,
    $14,
    $15
) RETURNING id
`

type CreatePlaceParams struct {
	Name              string         `json:"name"`
	Description       pgtype.Text    `json:"description"`
	OpeningHours      pgtype.Time    `json:"opening_hours"`
	ClosingHours      pgtype.Time    `json:"closing_hours"`
	Rating            pgtype.Numeric `json:"rating"`
	TicketCategory    pgtype.Int2    `json:"ticket_category"`
	TicketPrice       pgtype.Text    `json:"ticket_price"`
	LocationID        pgtype.Int8    `json:"location_id"`
	PlaceTypeID       pgtype.Int8    `json:"place_type_id"`
	CreatedAt         time.Time      `json:"created_at"`
	UpdatedAt         time.Time      `json:"updated_at"`
	CoverImageUrl     pgtype.Text    `json:"cover_image_url"`
	ProfileImageUrl   pgtype.Text    `json:"profile_image_url"`
	ResturantBranchID pgtype.Int8    `json:"resturant_branch_id"`
	PreferenceMatch   []int64        `json:"preference_match"`
}

func (q *Queries) CreatePlace(ctx context.Context, arg CreatePlaceParams) (int64, error) {
	row := q.db.QueryRow(ctx, createPlace,
		arg.Name,
		arg.Description,
		arg.OpeningHours,
		arg.ClosingHours,
		arg.Rating,
		arg.TicketCategory,
		arg.TicketPrice,
		arg.LocationID,
		arg.PlaceTypeID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.CoverImageUrl,
		arg.ProfileImageUrl,
		arg.ResturantBranchID,
		arg.PreferenceMatch,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}
