// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const checkUsernameAndEmail = `-- name: CheckUsernameAndEmail :one
SELECT
  id,
  email <> '' AS email_present,
  username <> '' AS username_present
FROM
  users WHERE username = $1 or email = $2
`

type CheckUsernameAndEmailParams struct {
	Username string `json:"username"`
	Email    string `json:"email"`
}

type CheckUsernameAndEmailRow struct {
	ID              int64       `json:"id"`
	EmailPresent    pgtype.Bool `json:"email_present"`
	UsernamePresent pgtype.Bool `json:"username_present"`
}

func (q *Queries) CheckUsernameAndEmail(ctx context.Context, arg CheckUsernameAndEmailParams) (CheckUsernameAndEmailRow, error) {
	row := q.db.QueryRow(ctx, checkUsernameAndEmail, arg.Username, arg.Email)
	var i CheckUsernameAndEmailRow
	err := row.Scan(&i.ID, &i.EmailPresent, &i.UsernamePresent)
	return i, err
}
